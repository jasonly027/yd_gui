name: Multi-platform Tests

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["main"]

jobs:
    build:
        runs-on: ${{ matrix.os }}

        strategy:
            # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
            fail-fast: false

            matrix:
                os: [ubuntu-latest, windows-latest]
                build_type: [Release]
                c_compiler: [gcc, clang, cl]
                include:
                    - os: windows-latest
                      c_compiler: cl
                      cpp_compiler: cl
                    - os: ubuntu-latest
                      c_compiler: gcc
                      cpp_compiler: g++
                    - os: ubuntu-latest
                      c_compiler: clang
                      cpp_compiler: clang++
                exclude:
                    - os: windows-latest
                      c_compiler: gcc
                    - os: windows-latest
                      c_compiler: clang
                    - os: ubuntu-latest
                      c_compiler: cl

        steps:
            - uses: actions/checkout@v4

            - name: Setup MSVC
              uses: ilammy/msvc-dev-cmd@v1
              
            - name: Install Ninja
              uses: seanmiddleditch/gha-setup-ninja@master

            - name: Install Qt
              uses: jurplel/install-qt-action@v4
              with:
                  version: "6.7.2"
                  setup-python: false

            - name: Set reusable strings
              id: strings
              shell: bash
              run: |
                  echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

            - name: Configure CMake
              # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
              # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
              run: >
                  cmake -B ${{ steps.strings.outputs.build-output-dir }}
                  -G Ninja
                  -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
                  -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
                  -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
                  -S ${{ github.workspace }}

            - name: Build
              run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

            - name: Test
              working-directory: ${{ steps.strings.outputs.build-output-dir }}
              run: ctest --build-config ${{ matrix.build_type }}
